basePath: /
definitions:
  dto.TaskResponse:
    properties:
      createdAt:
        type: string
      description:
        type: string
      finishedAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  dto.UserCreateRequest:
    properties:
      login:
        description: Login логин пользователя (обязательное поле)
        example: my_login
        maxLength: 30
        minLength: 3
        type: string
      password:
        description: Password пароль пользователя (обязательное поле)
        example: "12345678"
        maxLength: 30
        minLength: 8
        type: string
    required:
    - login
    - password
    type: object
  dto.UserFullResponse:
    properties:
      createdAt:
        description: CreatedAt дата создания пользователя
        example: "2010-10-10"
        type: string
      id:
        description: Id идентификатор пользователя
        example: 1
        type: integer
      login:
        description: Login логин пользователя
        example: my_login
        type: string
      tasks:
        description: Tasks все задачи пользователя
        items:
          $ref: '#/definitions/dto.TaskResponse'
        type: array
    type: object
  dto.UserShortResponse:
    properties:
      createdAt:
        description: CreatedAt дата создания пользователя
        example: "2010-10-10"
        type: string
      id:
        description: Id идентификатор пользователя
        example: 1
        type: integer
      login:
        description: Login логин пользователя
        example: my_login
        type: string
    type: object
  exceptions.ErrorResponse:
    properties:
      details:
        type: string
      message:
        type: string
      statusCode:
        type: integer
    type: object
host: 0.0.0.0:8080
info:
  contact: {}
  description: todo api for example.
  title: Todo api
  version: "1.0"
paths:
  /v1/users:
    get:
      consumes:
      - application/json
      description: Get all users from the database with pagination
      parameters:
      - default: 10
        description: Limit number of users
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserShortResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/exceptions.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/exceptions.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create user from the database with pagination on tasks
      parameters:
      - description: Body of request
        in: body
        name: user
        schema:
          $ref: '#/definitions/dto.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserShortResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/exceptions.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/exceptions.ErrorResponse'
      summary: Create user
      tags:
      - users
  /v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Get by id user from the database with pagination on tasks
      parameters:
      - default: 10
        description: Limit number of tasks
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      - description: User id
        in: path
        minimum: 0
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserFullResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/exceptions.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/exceptions.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get by id
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
